name: Publish Go Binary

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
env:
  GITHUB_TOKEN: ${{ secrets.GOACTION }}  
  UPLOAD_RELEASE: true
  REPO_URL: https://github.com/coredns/coredns  
  REPO_BRANCH: master
  DIR_NAME: coredns
  BIN_NAME: coredns
  TZ: Asia/Shanghai
  
jobs:
  buildAndDeploy:
    runs-on:  ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # 交叉构建,多平台交叉编译。goarch: amd64、i386、arm64，goos: linux、windows、drawin 
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
    # 使用checkout
    steps:
    - uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install tmate
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: '>=1.16.0'
    - run: go version
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: Make
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH $DIR_NAME
        ln -sf /workdir/$DIR_NAME $GITHUB_WORKSPACE/$DIR_NAME
        cd $DIR_NAME
        make
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}  
        
    - name: Packaging...
      run: tar czf $BIN_NAME-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz $BIN_NAME
    - name: Get version
      id: version
      run: echo "::set-output name=version::$(git rev-parse --short HEAD)"
      
    - name: Gets latest created release info
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag:  ${{ steps.version.outputs.version }}
          prerelease: true
          title: "Development Build"
          files: |
            ./$BIN_NAME-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
            
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
